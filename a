local rs = game:GetService("ReplicatedStorage")
local Players = game:GetService("Players")
local player = Players.LocalPlayer
local PlayerGui = player:WaitForChild("PlayerGui")

local listenEnabled = true

local ScreenGui = Instance.new("ScreenGui")
ScreenGui.Name = "EventListenerToggleGui"
ScreenGui.Parent = PlayerGui

local toggleButton = Instance.new("TextButton")
toggleButton.Size = UDim2.new(0, 120, 0, 40)
toggleButton.Position = UDim2.new(0, 10, 0, 10)
toggleButton.BackgroundColor3 = Color3.new(0.2, 0.2, 0.2)
toggleButton.TextColor3 = Color3.new(1, 1, 1)
toggleButton.Text = "ON"
toggleButton.Parent = ScreenGui

toggleButton.MouseButton1Click:Connect(function()
    listenEnabled = not listenEnabled
    if listenEnabled then
        toggleButton.Text = "ON"
    else
        toggleButton.Text = "OFF"
    end
end)

local function dumpTable(t, indent)
    indent = indent or 0
    local prefix = string.rep("  ", indent)
    if type(t) ~= "table" then
        print(prefix .. tostring(t))
        return
    end
    for k, v in pairs(t) do
        if type(v) == "table" then
            if type(k) == "number" then
                dumpTable(v, indent + 1)
            else
                print(prefix .. tostring(k) .. ":")
                dumpTable(v, indent + 1)
            end
        else
            if type(k) == "number" then
                print(prefix .. tostring(v))
            else
                print(prefix .. tostring(k) .. ": " .. tostring(v))
            end
        end
    end
end

for _, v in ipairs(rs:GetDescendants()) do
    if v:IsA("RemoteEvent") then
        v.OnClientEvent:Connect(function(...)
            if not listenEnabled then return end
            print("üì© Server ÁöÑ‰∫ã‰ª∂Ôºö", v:GetFullName())
            local args = {...}
            for i, arg in ipairs(args) do
                print("   üîπ ÂèÉÊï∏ " .. i .. ":")
                dumpTable(arg)
            end
        end)
    end
end

